use verifier_transition with type  components.VerifierTransitionsClass and default "new VerifierTransitionsClass()"!

To start passivate in waitForInput!

when in waitForInput and receive From_G1_to_G0 go to Processar_entrada_na_api_continue!
when in waitForInput and receive From_G4_to_G0 go to Calcular_resultado_da_transacao_continue!
when in waitForInput and receive From_G7_to_G0 go to Receber_pool_de_resultados_continue!

when in waitForInput and receive StartUp go to Registrar_uma_transacao!

generates output on From_G0_to_G1 with type String!
generates output on From_G0_to_G4 with type String!
generates output on From_G0_to_G7 with type String!

accepts input on From_G1_to_G0 with type String!
accepts input on From_G4_to_G0 with type String!
accepts input on From_G7_to_G0 with type String!
accepts input on StartUp!

hold in Registrar_uma_transacao for time 5!
after Registrar_uma_transacao output From_G0_to_G7!
from Registrar_uma_transacao go to waitForInput!


hold in Processar_entrada_na_api_continue for time 5!
from Processar_entrada_na_api_continue go to waitForInput!


hold in Calcular_resultado_da_transacao_continue for time 5!
from Calcular_resultado_da_transacao_continue go to waitForInput!


hold in Receber_pool_de_resultados_continue for time 5!
after Receber_pool_de_resultados_continue output From_G0_to_G7!
from Receber_pool_de_resultados_continue go to waitForInput!


// EndSequence for sequence starting at Registrar_uma_transacao