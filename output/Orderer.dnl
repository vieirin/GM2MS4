use orderer_transition with type  components.OrdererTransitionsClass and default "new components.OrdererTransitionsClass()"!
use result with type  components.Result and default "new components.Result(\"orderer\")"!

To start passivate in waitForInput!
Passivate in StopState!


when in waitForInput and receive From_G10_to_G11 go to Validate_block_signatures!
external event for waitForInput with From_G10_to_G11
<%
    Result incomingResult = result.update(messageList.get(0).getData());
    result.reset(incomingResult);
    
%>!

when in waitForInput and receive stop go to StopState!

generates output on From_G11_to_G10 with type Result!
generates output on stop !

accepts input on From_G10_to_G11 with type Result !


hold in Validate_block_signatures for time 5!
from Validate_block_signatures go to Create_block!
internal event for Validate_block_signatures
<%
    orderer_transition.validate_block_signatures_runner(result);
%>!


hold in Create_block for time 5!
from Create_block go to waitForInput!
internal event for Create_block
<%
    orderer_transition.create_block_runner(result);
%>!

after Create_block output From_G11_to_G10!
output event for Create_block
<%
    output.add(outFrom_G11_to_G10, result);
%>!
          


// EndSequence for sequence starting at Validate_block_signatures